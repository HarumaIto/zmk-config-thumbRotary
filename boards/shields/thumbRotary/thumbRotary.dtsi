 /*
 * Copyright (c) 2020 Pete Johanson
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/matrix_transform.h>

/ {
	chosen {
		zmk,kscan = &kscan0;
		zmk,physical-layout = &physical_layout0;
	};

	default_transform: matrix_transform {
		compatible = "zmk,matrix-transform";
		columns = <14>;
		rows = <4>;
    map = <
      RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5)                  RC(0,6) RC(0,7) RC(0,8) RC(0,9) RC(0,10) RC(0,11)
      RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5)                  RC(1,6) RC(1,7) RC(1,8) RC(1,9) RC(1,10) RC(1,11)
      RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5)                  RC(2,6) RC(2,7) RC(2,8) RC(2,9) RC(2,10) RC(2,11)
      RC(3,0) RC(3,1) RC(3,2) RC(3,3) RC(3,4) RC(3,5)  RC(3,6) RC(3,7) RC(3,8) RC(3,9) RC(3,10) RC(3,11) RC(3,12) RC(3,13)
		>;
	};

	physical_layout0: physical_layout_0 { // First physical layout, use different naming for other layouts
	  compatible = "zmk,physical-layout";
	  display-name = "Default Layout";
	  kscan = <&kscan0>; // Label of the kscan node, optional if all layouts use the same
	  transform = <&default_transform>; // Label of the matrix transform for this layout
	};

	kscan0: kscan {
		compatible = "zmk,kscan-gpio-matrix";
		label = "KSCAN";

		diode-direction = "col2row";
		row-gpios
			= <&xiao_d 0 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>     //Row0
			, <&xiao_d 1 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>     //Row1
			, <&xiao_d 2 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>     //Row2
			, <&xiao_d 3 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>     //Row3
			;
	};

  encoder: encoder {
    compatible = "alps,ec11";
    a-gpios = <&gpio0 9 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
    b-gpios = <&gpio0 10 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
    steps = <24>;
    status = "okay";
  };

  sensors: sensors {
    compatible = "zmk,keymap-sensors";
    sensors = <&encoder>;
    triggers-per-rotation = <10>;
  };
};

&xiao_i2c { status = "disabled"; };